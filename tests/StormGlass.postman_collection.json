{
	"info": {
		"_postman_id": "f4d9b855-a7e5-4f6a-b712-8d5d6187d109",
		"name": "StormGlass",
		"description": "The Storm Glass API gives developers access to global marine weather data from multiple sources using a single REST API. The API returns marine weather forecasts for the next 7 days in hourly resolution. Forecasts include swell height, swell direction, swell period, wave height, wave direction, wave period, wind speed, wind direction, and air temperature.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Valid Requests",
			"item": [
				{
					"name": "Get forecast - Valid Key - Default",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6abc0b3b-8054-4072-afa8-7ffea194e96a",
								"type": "text/javascript",
								"exec": [
									"pass = true;",
									"fail = false;",
									"",
									"var moment = require('moment');",
									"var data = JSON.parse(responseBody);",
									"var response = pm.response",
									"var header = responseHeaders;",
									"var cookie = responseCookies;",
									"//var key = data.errors.key;",
									"var code = response.code;",
									"var stat = response.status;",
									"var hours = data.hours;",
									"var meta = data.meta;",
									"var params = meta.params;",
									"var headerACAO = header['Access-Control-Allow-Origin'];",
									"var headerCL = header['Content-Length'];",
									"var headerCT = header['Content-Type'];",
									"var headerCE = header['Content-Encoding'];",
									"var headerKeys = Object.keys(header); ",
									"var startDate = moment().format('YYYY-MM-DD 00:00');",
									"var start = meta.start",
									"//console.log(key)",
									"//console.log(key === \"API key is invalid\")",
									"//console.log(headerKeys)",
									"//console.log(response)",
									"//console.log(startDate)",
									"//console.log(start)",
									"console.log(environment.timestampHeader)",
									"",
									"if (startDate === start) {",
									"    tests[\"Startdate = start\"] = pass;",
									"}",
									"else",
									"    tests[\"Startdate = start\"] = fail;",
									"",
									"if (headerKeys.length === 7) {",
									"    tests[\"Number of Header Objects = \" + headerKeys.length] = pass;",
									"}",
									"else",
									"    tests[\"Number of Header Objects = \" + headerObjects] = fail;",
									"   ",
									"if (hours.length === 241) {",
									"    tests[\"Number of Hours = \" + hours.length] = pass;",
									"}",
									"else",
									"    tests[\"Number of Hours = \" + hours.length] = fail;",
									"",
									"if (params.length === 23) {",
									"    tests[\"Number of Params = \" + params.length] = pass;",
									"}",
									"else",
									"    tests[\"Number of Params = \" + params.length] = fail;",
									"",
									"",
									"if (code === 200) {",
									"    tests[\"Response Code = \" + code] = pass;",
									"}",
									"else",
									"    tests[\"Response Code = \" + code] = fail;",
									"",
									"if (stat === \"OK\") {",
									"    tests[\"Status = \" + stat] = pass;",
									"}",
									"else",
									"    tests[\"Status = \" + stat] = fail;",
									"",
									"if (headerACAO === '*') {",
									"    tests[\"Access-Control-Allow-Origin = \" + headerACAO ] = pass;",
									"}",
									"else",
									"    tests[\"Access-Control-Allow-Origin = \" + headerACAO ] = fail;",
									"",
									"if (headerCE === \"gzip\") {",
									"    tests[\"Content-Encoding = \" + headerCE] = pass;",
									"}",
									"else",
									"    tests[\"Content-Encoding = \" + headerCE] = fail;",
									"    ",
									"if (headerCT === \"application/json\") {",
									"    tests[\"Content-Type = \" + headerCT] = pass;",
									"}",
									"else",
									"    tests[\"Content-Type = \" + headerCT] = fail;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authentication-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://api.stormglass.io/forecast?lat={{lat1}}&lng={{lng1}}",
							"protocol": "https",
							"host": [
								"api",
								"stormglass",
								"io"
							],
							"path": [
								"forecast"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat1}}"
								},
								{
									"key": "lng",
									"value": "{{lng1}}"
								}
							]
						},
						"description": "Send a longitude/latitude coordinate and receive a response containing weather data from multiple weather sources for that coordinate."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "135b9409-a7db-4c23-80b7-6e89225807eb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1823069a-9c05-4201-9d22-4f4b3df061f6",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Invalid Requests",
			"item": [
				{
					"name": "Get forecast - Invalid Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "428056d4-0658-469d-a780-2250864fc3cd",
								"type": "text/javascript",
								"exec": [
									"pass = true;",
									"fail = false;",
									"",
									"var data = JSON.parse(responseBody);",
									"var response = pm.response",
									"var header = responseHeaders;",
									"var cookie = responseCookies;",
									"var key = data.errors.key;",
									"var code = response.code;",
									"var stat = response.status;",
									"var headerACAO = header['Access-Control-Allow-Origin'];",
									"var headerCL = header['Content-Length'];",
									"var headerCT = header['Content-Type'];",
									"//console.log(key)",
									"//console.log(headerCT)",
									"console.log(environment.timestampHeader)",
									"",
									"if (key === \"API key is invalid\") {",
									"    tests[\"Invalid Key is correct\"] = pass;",
									"}",
									"else {",
									"    console.log(key);",
									"    tests[\"Invalid Key is correct\"] = fail;",
									"}",
									"",
									"if (code === 403) {",
									"    tests[\"Response Code = \" + code] = pass;",
									"}",
									"else",
									"    tests[\"Response Code = \" + code] = fail;",
									"",
									"if (stat === \"FORBIDDEN\") {",
									"    tests[\"Status = \" + stat] = pass;",
									"}",
									"else",
									"    tests[\"Status = \" + stat] = fail;",
									"",
									"if (headerACAO === '*') {",
									"    tests[\"Access-Control-Allow-Origin = \" + headerACAO ] = pass;",
									"}",
									"else",
									"    tests[\"Access-Control-Allow-Origin = \" + headerACAO ] = fail;",
									"",
									"if (headerCL === \"40\") {",
									"    tests[\"Content-Length = \" + headerCL] = pass;",
									"}",
									"else",
									"    tests[\"Content-Length = \" + headerCL] = fail;",
									"    ",
									"if (headerCT === \"application/json\") {",
									"    tests[\"Content-Type = \" + headerCT] = pass;",
									"}",
									"else",
									"    tests[\"Content-Type = \" + headerCT] = fail;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6fc022bd-8a85-4e1f-bc11-17041976c4d0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authentication-Token",
								"value": "{YOUR API TOKEN}"
							}
						],
						"body": {},
						"url": {
							"raw": "https://api.stormglass.io/forecast?lat=58.5&lng=17.8",
							"protocol": "https",
							"host": [
								"api",
								"stormglass",
								"io"
							],
							"path": [
								"forecast"
							],
							"query": [
								{
									"key": "lat",
									"value": "58.5"
								},
								{
									"key": "lng",
									"value": "17.8"
								}
							]
						},
						"description": "Send a longitude/latitude coordinate and receive a response containing weather data from multiple weather sources for that coordinate."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b3465b01-d36b-4d63-b52d-96a1690ff116",
				"type": "text/javascript",
				"exec": [
					"var moment = require('moment');",
					"",
					"pm.environment.set(\"timestampHeader\", moment().format('MMMM Do YYYY, h:mm:ss a'));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b2e0c15e-1f9b-4fca-aeaf-f47a4aa0f617",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}